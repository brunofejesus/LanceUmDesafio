@model LanceUmDesafio.Models.Desafio

@{
    ViewBag.Title = "Editar Desafio";
    Layout = "~/Views/Shared/_LayoutSemBanner.cshtml";
}

<div class="col-md-6">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IdDesafio)
            @Html.HiddenFor(model => model.IDUsuario)

            <div class="form-group">
                <label class="control-label col-md-2">Titulo</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control", placeholder = "Titulo Do Desafio" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2">Descrição</label>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Conteudo, 5, 5, new { @class = "form-control", placeholder = "Descreva com detalhes o seu desafio" })
                    @Html.ValidationMessageFor(model => model.Conteudo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Categoria</label>
                <div class="col-md-10">
                    @Html.DropDownList("IDCategoria", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IDCategoria, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Confirmar Edição" class="btn btn-warning" />
                </div>
            </div>
        </div>
    }
</div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
